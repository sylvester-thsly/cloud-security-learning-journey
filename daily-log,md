# 📅 Daily Learning Log

> Documenting my 6-month journey to AWS & Cybersecurity mastery

---

## 📊 Progress Overview

![Week](https://img.shields.io/badge/Week-1%2F26-00d4ff?style=flat-square)
![Days](https://img.shields.io/badge/Days-2%2F180-00d4ff?style=flat-square)
![Modules](https://img.shields.io/badge/Modules-2%2F12-00d4ff?style=flat-square)
![Hours](https://img.shields.io/badge/Hours-5+-00d4ff?style=flat-square)

---

<br/>

## 🗓️ Day 1 - October 11, 2025

### ⏱️ Time Investment
**2.5 hours** | Status: ✅ Complete

---

### 📚 What I Learned

#### ☁️ Cloud Computing Fundamentals
- Understanding what cloud computing is and its business value
- Why companies are migrating to the cloud

#### 🏗️ Deployment Models
| Model | Description | Use Case |
|-------|-------------|----------|
| **On-Premises** | Physical servers in your building | Complete control, high cost |
| **Cloud-Based** | Everything on AWS | Scalability, lower overhead |
| **Hybrid** | Mix of both | Gradual migration, compliance |

#### 🌍 AWS Global Infrastructure
```yaml
Structure:
  Regions:
    - Geographic locations (US East, Europe, Asia)
    - Contains multiple Availability Zones
    
  Availability Zones:
    - Separate data centers within a Region
    - Provides redundancy and fault tolerance
    
Benefits:
  - High availability ✅
  - Fault tolerance ✅
  - Low latency globally ✅
```

#### 🔐 AWS Shared Responsibility Model

| AWS Responsibility | Customer Responsibility |
|-------------------|------------------------|
| Physical infrastructure | Data encryption |
| Data centers | Applications |
| Hardware | Operating system patches |
| Network equipment | User access control |
| **Security OF the cloud** | **Security IN the cloud** |

#### 🖥️ Client-Server Model
- **Client:** Sends requests (browser, mobile app)
- **Server:** Processes and responds (AWS provides scalable servers)
- **Cloud:** Makes servers accessible over the internet

---

### 🛠️ Hands-On Practice

- [x] Created AWS free tier account
- [x] Enabled MFA on root account
- [x] Set up $0 billing alerts
- [x] Received $100 in free credits (183 days)
- [x] Explored AWS Management Console

---

### 💪 Challenges Overcome

> **Challenge:** Confused about Regions vs Availability Zones  
> **Solution:** Region = City, AZ = Neighborhood analogy helped!

> **Challenge:** Understanding shared responsibility  
> **Solution:** "AWS = Physical, Customer = Digital" mental model

---

### 📝 Quiz Performance

✅ Strong understanding: Deployment models, global infrastructure  
✅ Solid grasp: Shared responsibility model  
⚠️ Review needed: Specific AZ configurations

**Score:** 8/8 questions correct

---

### 🎯 Tomorrow's Goals

- [ ] Start Module 2: Compute in the Cloud
- [ ] Learn about Amazon EC2
- [ ] Understand EC2 instance types
- [ ] Plan first hands-on EC2 deployment

---

### 💭 Reflections

> *"Cloud computing is essentially renting computer resources instead of owning physical servers. This fundamental shift allows companies to focus on innovation rather than infrastructure management."*

**Key Insight:** The shared responsibility model is elegant - AWS handles the heavy lifting (physical), while customers maintain control over their data and applications.

**Feeling:** Confident and excited to move into hands-on compute work!

---

### 📚 Resources Used

- 🎓 [AWS Skill Builder - Cloud Practitioner Essentials Module 1](https://skillbuilder.aws)
- 📖 AWS Documentation - Global Infrastructure
- ✅ Module 1 Knowledge Check Quiz

---

<br/>

## 🗓️ Day 2 - October 13, 2025

### ⏱️ Time Investment
**2-3 hours** | Status: ✅ Complete

---

### 📚 What I Learned

#### 💻 Amazon EC2 (Elastic Compute Cloud)
Virtual servers in the cloud that scale up or down based on demand

#### 🎯 EC2 Instance Types

| Type | Icon | Optimized For | Use Cases | Example |
|------|------|---------------|-----------|---------|
| **General Purpose** | ⚖️ | Balanced resources | Web servers, small DBs | T3, M5 |
| **Compute Optimized** | 🚀 | High CPU performance | Scientific modeling, gaming | C5, C6 |
| **Memory Optimized** | 🧠 | Large RAM | Big databases, caching | R5, X1 |
| **Storage Optimized** | 💾 | High disk I/O | Data warehouses | I3, D2 |
| **Accelerated Computing** | ⚡ | GPU/hardware accelerators | ML, graphics rendering | P3, G4 |

#### 💰 EC2 Pricing Models

```python
pricing_models = {
    "On-Demand": {
        "use_when": "Unpredictable workloads",
        "commitment": "None",
        "cost": "Highest",
        "interruption": "Never"
    },
    "Reserved": {
        "use_when": "Steady-state, predictable",
        "commitment": "1-3 years",
        "cost": "Up to 75% savings",
        "interruption": "Never"
    },
    "Spot": {
        "use_when": "Flexible, interruptible work",
        "commitment": "None", 
        "cost": "Up to 90% savings",
        "interruption": "Possible"
    },
    "Savings Plans": {
        "use_when": "Consistent usage",
        "commitment": "1-3 years",
        "cost": "Flexible discounts",
        "interruption": "Never"
    }
}
```

#### 🔄 Auto Scaling & Load Balancing

**Auto Scaling:**
- Automatically adds instances when demand ↑
- Automatically removes instances when demand ↓
- Based on metrics (CPU, memory, custom)
- Saves costs + ensures performance

**Elastic Load Balancing:**
- Distributes traffic evenly across instances
- Health checks on instances
- Works with Auto Scaling automatically

```
Traffic Flow:
Users → Load Balancer → [EC2] [EC2] [EC2]
                        ↑ Auto Scaling manages count
```

#### 📸 Amazon Machine Images (AMI)
- Template for launching EC2 instances
- Contains OS, applications, configurations
- Ensures consistency across scaled instances

#### 🏢 Multi-Tenancy
- Multiple customers share physical hardware
- Complete isolation through hypervisor
- Like an apartment building analogy
- Cost-efficient while maintaining security

---

### 🛠️ Hands-On Practice

- [x] Completed Module 2 lessons
- [x] Quiz: All questions correct
- [x] Understanding instance type selection
- [x] Learned pricing optimization strategies

---

### 💪 Challenges Overcome

> **Challenge:** Too many instance types to remember  
> **Solution:** Created mental categories (General, Compute, Memory, Storage, Accelerated)

> **Challenge:** When to use which pricing model  
> **Solution:** "Predictable = Reserved, Flexible = Spot, Unknown = On-Demand"

> **Challenge:** Multi-tenancy security concerns  
> **Solution:** Understood hypervisor isolation guarantees

---

### 📝 Quiz Performance

✅ Instance types: Perfect understanding  
✅ Pricing models: Clear decision framework  
✅ Auto Scaling: Understood automation  
✅ Multi-tenancy: Grasped isolation concept

**Score:** 14/14 questions correct

---

### 🎯 Next Steps

- [ ] **This Weekend:** Build first project - Static website on S3
- [ ] Create simple HTML portfolio page
- [ ] Deploy to S3 with static hosting
- [ ] Document process with screenshots
- [ ] Update LinkedIn with Week 1 summary

---

### 💭 Reflections

> *"EC2 is the foundation of AWS compute. Understanding instance types and pricing models is crucial for cost optimization. The combination of Auto Scaling and Load Balancing creates a powerful, resilient architecture."*

**Key Insight:** Choosing the right instance type and pricing model can save 50-90% on costs while maintaining performance.

**Feeling:** Ready to build! Theory is important, but I'm excited to deploy my first real AWS project.

---

### 📚 Resources Used

- 🎓 [AWS Skill Builder - Cloud Practitioner Essentials Module 2](https://skillbuilder.aws)
- 📖 AWS EC2 Documentation
- 💡 Claude AI for concept clarification
- ✅ Module 2 Knowledge Check Quiz

---

<br/>

## 📊 Week 1 Summary

### 🎯 Achievements

| Metric | Target | Actual | Status |
|--------|--------|--------|--------|
| Modules Completed | 2 | 2 | ✅ |
| Hours Invested | 4-5 | 5+ | ✅ |
| Quiz Performance | >80% | 100% | ✅ |
| Hands-On Practice | AWS Account | Complete | ✅ |

### 📈 Skills Acquired

**Core Concepts:**
- ✅ Cloud computing fundamentals
- ✅ AWS global infrastructure
- ✅ Shared responsibility model
- ✅ EC2 instance types and pricing
- ✅ Auto Scaling and Load Balancing
- ✅ AMIs and multi-tenancy

**Practical Skills:**
- ✅ AWS account setup and security
- ✅ Cost optimization strategies
- ✅ Instance type selection for workloads
- ✅ Understanding scalability patterns

### 🚀 Week 2 Preview

**Goals:**
- Complete Module 3: Storage & Databases
- Complete Module 4: Networking
- Build Project 1: Static website on S3
- Build Project 2: WordPress on EC2 (stretch goal)

**Focus Areas:**
- S3 storage service
- Database options (RDS, DynamoDB)
- VPC networking concepts
- Hands-on deployments

---

### 💡 Lessons Learned

1. **Consistency > Intensity:** Daily 2-3 hours beats weekend cramming
2. **Document Everything:** GitHub log keeps me accountable
3. **Learn → Apply:** Need to build projects to truly understand
4. **Ask Questions:** No shame in clarifying concepts
5. **Stay Curious:** Every topic opens new questions

---

### 🎉 Wins This Week

- ✅ Completed 2 modules on schedule
- ✅ 100% quiz accuracy
- ✅ Maintained daily GitHub commits
- ✅ Posted learning journey on LinkedIn
- ✅ Set up professional profile and learning infrastructure

---

<div align="center">

**Week 1 Complete! 🔥**

*1 week down, 25 to go. Building momentum!*

![Streak](https://img.shields.io/badge/Streak-2%20Days-ff6b6b?style=for-the-badge)
![Next](https://img.shields.io/badge/Next-First%20Project-00d4ff?style=for-the-badge)

</div>





## Day 3 - October 15, 2025

### Time Investment
**3 hours** | Status: ✅ Complete

### What I Learned
- S3 storage fundamentals
- Static website hosting
- Bucket policies and permissions
- Making objects public
- AWS S3 configuration

### Hands-On Practice
- [x] Completed Module 3: Storage & Databases
- [x] Created S3 bucket
- [x] Configured static website hosting
- [x] Set up bucket policy for public access
- [x] **Deployed first live AWS project!**

### Project Built
**Static Website on S3**
- Built professional portfolio website
- Deployed to AWS S3
- Live URL: http://sylvester-portfolio-2025.s3-website.eu-north-1.amazonaws.com
- Cost: $0.00 (free tier)

### Challenges
- Initial 404 error due to file naming
- Learned importance of index.html naming convention
- Understood bucket policies and public access

### Next Steps
- [ ] Update GitHub projects folder
- [ ] Add project documentation
- [ ] Screenshots for portfolio
- [ ] LinkedIn post

**Status:** ✅ Module 3 Complete | ✅ Project 1 LIVE!
```

---











### **2. Document Your Project**

**Create this file in GitHub:**

`projects/01-static-website-s3/README.md`

Add:
- Project description
- What you learned
- Screenshots
- The live URL
- Technical details

---

### **3. This Weekend (Saturday)**

**Write your Week 1 LinkedIn Post:**
```
Week 1 Complete! ☁️

Just finished my first week of AWS learning and deployed my first cloud project!

What I accomplished:
✅ Completed 3 AWS modules (Fundamentals, EC2, S3)
✅ Built and deployed a live website on AWS S3
✅ 100% quiz accuracy on all modules
✅ Set up professional GitHub documentation

Live project: http://sylvester-portfolio-2025.s3-website.eu-north-1.amazonaws.com/

This is just the beginning. 25 more weeks to go!

#AWS #CloudComputing #LearningInPublic #100DaysOfCloud


## Day 4 - October 1, 2025

### Time Investment
**2-3 hours** | Status: ✅ Complete

### What I Learned
- **Module 4: Networking & Content Delivery**
- VPC (Virtual Private Cloud) fundamentals
- Subnets (public vs private)
- Internet Gateways and Route Tables
- Security Groups vs Network ACLs
- CloudFront CDN basics
- Route 53 DNS service

### Key Concepts Mastered
- How VPC isolates resources
- Security layers (Security Groups, NACLs)
- Public vs private subnet architecture
- Content delivery with CloudFront

### Hands-On Practice
- [x] Completed Module 4 quiz
- [x] Understanding VPC architecture
- [x] Security group configuration concepts

### Challenges
- Understanding the difference between Security Groups and NACLs
- VPC CIDR block concepts

### Next Steps
- [ ] Finish Module 4 completely
- [ ] Start Module 5 (Databases)
- [ ] Plan next project

### Reflections
Networking is more complex but essential for secure cloud architecture. Understanding how to properly isolate and secure resources.

**Status:** ✅ Module 4 Nearly Complete | 4/12 Modules
